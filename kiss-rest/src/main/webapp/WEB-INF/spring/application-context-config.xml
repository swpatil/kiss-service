<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<jpa:repositories base-package="com.tdc.persistence.repositories"
		entity-manager-factory-ref="entityManagerFactoryAMS" />

	<context:component-scan base-package="com.tdc" />

	<tx:annotation-driven />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="kiss-persistence-unit" />
	</bean>

	<bean id="entityManagerFactoryAMS"
		class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="ams-persistence-unit" />
	</bean>


	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="transactionManagerAMS" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactoryAMS" />
	</bean>

	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />


<!--	<bean class="com.tdc.util.IndexProcessor" />-->   
  
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate" />	 	    

	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean
				class="com.tdc.util.DefaultJacksonHttpMessageConverter">
				<!-- True only for the blog article - a production system would set this 
					to false to reduce the number of bytes sent across the wire: -->
				<property name="prettyPrint" value="true" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<mvc:interceptors>
		<bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
	</mvc:interceptors>
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver" />

	<!-- Unfortunately we have to repeat an instance of this class here because 
		the mvc:message-converters element above does not support <ref/> elements: -->
	<bean id="jacksonHttpMessageConverter"
		class="com.tdc.util.DefaultJacksonHttpMessageConverter">
		<property name="prettyPrint" value="true" />
	</bean>

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
			</map>
		</property>
		<property name="defaultContentType"
			value="#{T(org.springframework.http.MediaType).APPLICATION_JSON}" />
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
			</list>
		</property>
	</bean>

	<!-- Allow Exceptions to be handled in annotated methods if desired. Otherwise 
		fallback to the 'restExceptionResolver' below: -->
	<bean id="annotationMethodHandlerExceptionResolver"
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">
		<property name="order" value="0" />
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="rohit.surve1986@gmail.com" />
		<property name="password" value="Ganpati_1986" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>

	<!-- <bean class="com.tdc.util.IndexProcessor" /> -->

	<bean id="restExceptionResolver" class="com.tdc.exception.RestExceptionHandler">
		<property name="order" value="100" />
		<property name="messageConverters">
			<list>
				<ref bean="jacksonHttpMessageConverter" />
			</list>
		</property>
		<property name="errorResolver">
			<bean class="com.tdc.exception.DefaultRestErrorResolver">
				<property name="localeResolver" ref="localeResolver" />
				<property name="defaultMoreInfoUrl" value="mailto:rsu@tdc.dk" />
				<property name="exceptionMappingDefinitions">
					<map>
						<!-- 404 -->
						<entry key="com.tdc.exception.UnknownResourceException"
							value="404, _exmsg" />

						<!-- 500 (catch all): -->
						<entry key="Throwable" value="500" />
					</map>
				</property>
			</bean>
		</property>
	</bean>
	<bean id="dozerBeanMapper" class="org.dozer.DozerBeanMapper">
		<property name="mappingFiles">
			<list>
				<value>dozer-mapping.xml</value>
			</list>
		</property>
	</bean>

</beans>